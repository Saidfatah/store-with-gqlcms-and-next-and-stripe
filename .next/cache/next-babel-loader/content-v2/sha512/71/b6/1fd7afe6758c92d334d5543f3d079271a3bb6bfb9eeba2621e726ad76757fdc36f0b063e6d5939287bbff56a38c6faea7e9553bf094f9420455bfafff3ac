{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/saidfatah/Documents/learning/NEXT/gqlcms-marketplace/context/settings.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { currencies } from 'graphcms.config';\nimport useLocalStorage from '@/hooks/use-local-storage';\nvar SettingsContext = /*#__PURE__*/React.createContext();\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SWITCH_CURRENCY':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        activeCurrency: action.payload\n      });\n\n    default:\n      throw new Error(\"Unhandled action type: \".concat(action.type));\n  }\n}\n\nfunction SettingsProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useLocalStorage = useLocalStorage('graphcms-commerce-reference', {\n    activeCurrency: currencies.find(function (currency) {\n      return Boolean(currency[\"default\"]);\n    })\n  }),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      savedSettings = _useLocalStorage2[0],\n      saveSettings = _useLocalStorage2[1];\n\n  var _React$useReducer = React.useReducer(reducer, savedSettings),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      hasMounted = _React$useState2[0],\n      setHasMounted = _React$useState2[1];\n\n  var switchCurrency = function switchCurrency(currency) {\n    return dispatch({\n      type: 'SWITCH_CURRENCY',\n      payload: currency\n    });\n  };\n\n  React.useEffect(function () {\n    saveSettings(state);\n  }, [state, saveSettings]);\n  React.useEffect(function () {\n    setHasMounted(true);\n  }, []);\n  if (!hasMounted) return null;\n  return /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n    value: _objectSpread(_objectSpread({}, state), {}, {\n      switchCurrency: switchCurrency\n    }),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SettingsProvider, \"bNmYSiIOIhlUx8MgVBIzpmqXDVA=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = SettingsProvider;\n\nvar useSettingsContext = function useSettingsContext() {\n  _s2();\n\n  var context = React.useContext(SettingsContext);\n  if (!context) throw new Error('useSettingsContext must be used within a SettingsProvider');\n  return context;\n};\n\n_s2(useSettingsContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { SettingsProvider, useSettingsContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsProvider\");","map":{"version":3,"sources":["/Users/saidfatah/Documents/learning/NEXT/gqlcms-marketplace/context/settings.js"],"names":["React","currencies","useLocalStorage","SettingsContext","createContext","reducer","state","action","type","activeCurrency","payload","Error","SettingsProvider","children","find","currency","Boolean","savedSettings","saveSettings","useReducer","dispatch","useState","hasMounted","setHasMounted","switchCurrency","useEffect","useSettingsContext","context","useContext"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AAEA,IAAMC,eAAe,gBAAGH,KAAK,CAACI,aAAN,EAAxB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,6CAAYF,KAAZ;AAAmBG,QAAAA,cAAc,EAAEF,MAAM,CAACG;AAA1C;;AACF;AACE,YAAM,IAAIC,KAAJ,kCAAoCJ,MAAM,CAACC,IAA3C,EAAN;AAJJ;AAMD;;AAED,SAASI,gBAAT,OAAwC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,yBACAX,eAAe,CACnD,6BADmD,EAEnD;AACEO,IAAAA,cAAc,EAAER,UAAU,CAACa,IAAX,CAAgB,UAACC,QAAD;AAAA,aAAcC,OAAO,CAACD,QAAQ,WAAT,CAArB;AAAA,KAAhB;AADlB,GAFmD,CADf;AAAA;AAAA,MAC/BE,aAD+B;AAAA,MAChBC,YADgB;;AAAA,0BAOZlB,KAAK,CAACmB,UAAN,CAAiBd,OAAjB,EAA0BY,aAA1B,CAPY;AAAA;AAAA,MAO/BX,KAP+B;AAAA,MAOxBc,QAPwB;;AAAA,wBAQFpB,KAAK,CAACqB,QAAN,CAAe,KAAf,CARE;AAAA;AAAA,MAQ/BC,UAR+B;AAAA,MAQnBC,aARmB;;AAUtC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACT,QAAD;AAAA,WACrBK,QAAQ,CAAC;AAAEZ,MAAAA,IAAI,EAAE,iBAAR;AAA2BE,MAAAA,OAAO,EAAEK;AAApC,KAAD,CADa;AAAA,GAAvB;;AAGAf,EAAAA,KAAK,CAACyB,SAAN,CAAgB,YAAM;AACpBP,IAAAA,YAAY,CAACZ,KAAD,CAAZ;AACD,GAFD,EAEG,CAACA,KAAD,EAAQY,YAAR,CAFH;AAIAlB,EAAAA,KAAK,CAACyB,SAAN,CAAgB,YAAM;AACpBF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD,EAEG,EAFH;AAIA,MAAI,CAACD,UAAL,EAAiB,OAAO,IAAP;AAEjB,sBACE,QAAC,eAAD,CAAiB,QAAjB;AACE,IAAA,KAAK,kCACAhB,KADA;AAEHkB,MAAAA,cAAc,EAAdA;AAFG,MADP;AAAA,cAMGX;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAjCQD,gB;UAC+BV,e;;;KAD/BU,gB;;AAmCT,IAAMc,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAAA;;AAC/B,MAAMC,OAAO,GAAG3B,KAAK,CAAC4B,UAAN,CAAiBzB,eAAjB,CAAhB;AAEA,MAAI,CAACwB,OAAL,EACE,MAAM,IAAIhB,KAAJ,CAAU,2DAAV,CAAN;AAEF,SAAOgB,OAAP;AACD,CAPD;;IAAMD,kB;;AASN,SAASd,gBAAT,EAA2Bc,kBAA3B","sourcesContent":["import * as React from 'react'\n\nimport { currencies } from 'graphcms.config'\nimport useLocalStorage from '@/hooks/use-local-storage'\n\nconst SettingsContext = React.createContext()\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SWITCH_CURRENCY':\n      return { ...state, activeCurrency: action.payload }\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`)\n  }\n}\n\nfunction SettingsProvider({ children }) {\n  const [savedSettings, saveSettings] = useLocalStorage(\n    'graphcms-commerce-reference',\n    {\n      activeCurrency: currencies.find((currency) => Boolean(currency.default))\n    }\n  )\n  const [state, dispatch] = React.useReducer(reducer, savedSettings)\n  const [hasMounted, setHasMounted] = React.useState(false)\n\n  const switchCurrency = (currency) =>\n    dispatch({ type: 'SWITCH_CURRENCY', payload: currency })\n\n  React.useEffect(() => {\n    saveSettings(state)\n  }, [state, saveSettings])\n\n  React.useEffect(() => {\n    setHasMounted(true)\n  }, [])\n\n  if (!hasMounted) return null\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        ...state,\n        switchCurrency\n      }}\n    >\n      {children}\n    </SettingsContext.Provider>\n  )\n}\n\nconst useSettingsContext = () => {\n  const context = React.useContext(SettingsContext)\n\n  if (!context)\n    throw new Error('useSettingsContext must be used within a SettingsProvider')\n\n  return context\n}\n\nexport { SettingsProvider, useSettingsContext }\n"]},"metadata":{},"sourceType":"module"}