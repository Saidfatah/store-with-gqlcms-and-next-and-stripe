{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/saidfatah/Documents/learning/NEXT/gqlcms-marketplace/components/ui/form.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { FormProvider, useFormContext } from 'react-hook-form';\nimport { ChevronDownSmallIcon } from '@/components/icons';\n\nfunction Form(_ref) {\n  let {\n    children,\n    methods,\n    onSubmit\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"methods\", \"onSubmit\"]);\n\n  return /*#__PURE__*/_jsxDEV(FormProvider, _objectSpread(_objectSpread({}, methods), {}, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n      onSubmit: onSubmit\n    }, props), {}, {\n      children: children\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\nconst Input = /*#__PURE__*/React.forwardRef(({\n  children,\n  className,\n  disabled = false,\n  field,\n  placeholder,\n  type = 'text'\n}, ref) => {\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: field,\n      name: field,\n      type: type,\n      disabled: disabled,\n      placeholder: placeholder,\n      className: \"appearance-none min-w-0 w-full bg-white border border-gray-300 py-2 px-4 text-base rounded-md text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:placeholder-gray-400\",\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n});\nconst Select = /*#__PURE__*/React.forwardRef((_ref2, ref) => {\n  let {\n    children,\n    className,\n    defaultValue = '',\n    disabled,\n    field,\n    label,\n    options\n  } = _ref2,\n      props = _objectWithoutProperties(_ref2, [\"children\", \"className\", \"defaultValue\", \"disabled\", \"field\", \"label\", \"options\"]);\n\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    className: className,\n    children: [label ? /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: field,\n      className: \"sr-only\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", _objectSpread(_objectSpread({\n        id: field,\n        name: field,\n        disabled: disabled,\n        defaultValue: defaultValue,\n        className: \"appearance-none block w-full bg-none bg-white border border-gray-300 rounded-md py-2 pl-3 pr-10 text-base text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n        ref: ref\n      }, props), {}, {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"\",\n          children: \"Please select an option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this))]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pointer-events-none absolute inset-y-0 right-0 px-2 flex items-center\",\n        children: /*#__PURE__*/_jsxDEV(ChevronDownSmallIcon, {\n          className: \"h-4 w-4 text-gray-400\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n});\nconst Textarea = /*#__PURE__*/React.forwardRef(({\n  children,\n  className,\n  disabled = false,\n  field,\n  placeholder,\n  rows = 4,\n  type = 'text'\n}, ref) => {\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: field,\n      name: field,\n      type: type,\n      disabled: disabled,\n      placeholder: placeholder,\n      rows: rows,\n      className: \"appearance-none min-w-0 w-full bg-white border border-gray-300 py-2 px-4 text-base rounded-md text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:placeholder-gray-400\",\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 7\n  }, this);\n});\n\nfunction FormInput(props) {\n  const {\n    errors,\n    register\n  } = useFormContext();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({\n      ref: register\n    }, props), {}, {\n      children: errors !== null && errors !== void 0 && errors[props.field] ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 text-red-700 text-sm\",\n        children: errors[props.field].message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this) : null\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n\nfunction FormSelect(props) {\n  const {\n    errors,\n    register\n  } = useFormContext();\n  return /*#__PURE__*/_jsxDEV(Select, _objectSpread(_objectSpread({\n    ref: register\n  }, props), {}, {\n    children: errors !== null && errors !== void 0 && errors[props.field] ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-red-700 text-sm\",\n      children: errors[props.field].message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this) : null\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n\nfunction FormTextarea(props) {\n  const {\n    errors,\n    register\n  } = useFormContext();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Textarea, _objectSpread(_objectSpread({\n      ref: register\n    }, props), {}, {\n      children: errors !== null && errors !== void 0 && errors[props.field] ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 text-red-700 text-sm\",\n        children: errors[props.field].message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this) : null\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n\nForm.Input = FormInput;\nForm.Select = FormSelect;\nForm.Textarea = FormTextarea;\nexport default Form;\nexport { Input, Select, Textarea };","map":{"version":3,"sources":["/Users/saidfatah/Documents/learning/NEXT/gqlcms-marketplace/components/ui/form.js"],"names":["React","FormProvider","useFormContext","ChevronDownSmallIcon","Form","children","methods","onSubmit","props","Input","forwardRef","className","disabled","field","placeholder","type","ref","Select","defaultValue","label","options","map","option","index","value","Textarea","rows","FormInput","errors","register","message","FormSelect","FormTextarea"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { FormProvider, useFormContext } from 'react-hook-form'\n\nimport { ChevronDownSmallIcon } from '@/components/icons'\n\nfunction Form({ children, methods, onSubmit, ...props }) {\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={onSubmit} {...props}>\n        {children}\n      </form>\n    </FormProvider>\n  )\n}\n\nconst Input = React.forwardRef(\n  (\n    {\n      children,\n      className,\n      disabled = false,\n      field,\n      placeholder,\n      type = 'text'\n    },\n    ref\n  ) => {\n    return (\n      <fieldset className={className}>\n        <input\n          id={field}\n          name={field}\n          type={type}\n          disabled={disabled}\n          placeholder={placeholder}\n          className=\"appearance-none min-w-0 w-full bg-white border border-gray-300 py-2 px-4 text-base rounded-md text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:placeholder-gray-400\"\n          ref={ref}\n        />\n        {children}\n      </fieldset>\n    )\n  }\n)\n\nconst Select = React.forwardRef(\n  (\n    {\n      children,\n      className,\n      defaultValue = '',\n      disabled,\n      field,\n      label,\n      options,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <fieldset className={className}>\n        {label ? (\n          <label htmlFor={field} className=\"sr-only\">\n            {label}\n          </label>\n        ) : null}\n        <div className=\"relative\">\n          <select\n            id={field}\n            name={field}\n            disabled={disabled}\n            defaultValue={defaultValue}\n            className=\"appearance-none block w-full bg-none bg-white border border-gray-300 rounded-md py-2 pl-3 pr-10 text-base text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n            ref={ref}\n            {...props}\n          >\n            <option disabled value=\"\">\n              Please select an option\n            </option>\n            {options.map((option, index) => (\n              <option key={index} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n          <div className=\"pointer-events-none absolute inset-y-0 right-0 px-2 flex items-center\">\n            <ChevronDownSmallIcon\n              className=\"h-4 w-4 text-gray-400\"\n              aria-hidden=\"true\"\n            />\n          </div>\n        </div>\n        {children}\n      </fieldset>\n    )\n  }\n)\n\nconst Textarea = React.forwardRef(\n  (\n    {\n      children,\n      className,\n      disabled = false,\n      field,\n      placeholder,\n      rows = 4,\n      type = 'text'\n    },\n    ref\n  ) => {\n    return (\n      <fieldset className={className}>\n        <textarea\n          id={field}\n          name={field}\n          type={type}\n          disabled={disabled}\n          placeholder={placeholder}\n          rows={rows}\n          className=\"appearance-none min-w-0 w-full bg-white border border-gray-300 py-2 px-4 text-base rounded-md text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:placeholder-gray-400\"\n          ref={ref}\n        />\n        {children}\n      </fieldset>\n    )\n  }\n)\n\nfunction FormInput(props) {\n  const { errors, register } = useFormContext()\n\n  return (\n    <React.Fragment>\n      <Input ref={register} {...props}>\n        {errors?.[props.field] ? (\n          <p className=\"mt-2 text-red-700 text-sm\">\n            {errors[props.field].message}\n          </p>\n        ) : null}\n      </Input>\n    </React.Fragment>\n  )\n}\n\nfunction FormSelect(props) {\n  const { errors, register } = useFormContext()\n\n  return (\n    <Select ref={register} {...props}>\n      {errors?.[props.field] ? (\n        <p className=\"mt-2 text-red-700 text-sm\">\n          {errors[props.field].message}\n        </p>\n      ) : null}\n    </Select>\n  )\n}\n\nfunction FormTextarea(props) {\n  const { errors, register } = useFormContext()\n\n  return (\n    <React.Fragment>\n      <Textarea ref={register} {...props}>\n        {errors?.[props.field] ? (\n          <p className=\"mt-2 text-red-700 text-sm\">\n            {errors[props.field].message}\n          </p>\n        ) : null}\n      </Textarea>\n    </React.Fragment>\n  )\n}\n\nForm.Input = FormInput\nForm.Select = FormSelect\nForm.Textarea = FormTextarea\n\nexport default Form\n\nexport { Input, Select, Textarea }\n"]},"metadata":{},"sourceType":"module"}