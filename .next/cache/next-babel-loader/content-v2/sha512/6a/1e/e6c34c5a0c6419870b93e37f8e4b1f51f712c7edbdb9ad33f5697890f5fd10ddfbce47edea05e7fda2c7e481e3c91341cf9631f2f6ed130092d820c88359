{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/saidfatah/Documents/learning/NEXT/gqlcms-marketplace/context/settings.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { currencies } from 'graphcms.config';\nimport useLocalStorage from '@/hooks/use-local-storage';\nconst SettingsContext = /*#__PURE__*/React.createContext();\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SWITCH_CURRENCY':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        activeCurrency: action.payload\n      });\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nfunction SettingsProvider({\n  children\n}) {\n  const [savedSettings, saveSettings] = useLocalStorage('graphcms-commerce-reference', {\n    activeCurrency: currencies.find(currency => Boolean(currency.default))\n  });\n  const [state, dispatch] = React.useReducer(reducer, savedSettings);\n  const [hasMounted, setHasMounted] = React.useState(false);\n\n  const switchCurrency = currency => dispatch({\n    type: 'SWITCH_CURRENCY',\n    payload: currency\n  });\n\n  React.useEffect(() => {\n    saveSettings(state);\n  }, [state, saveSettings]);\n  React.useEffect(() => {\n    setHasMounted(true);\n  }, []);\n  if (!hasMounted) return null;\n  return /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n    value: _objectSpread(_objectSpread({}, state), {}, {\n      switchCurrency\n    }),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\nconst useSettingsContext = () => {\n  const context = React.useContext(SettingsContext);\n  if (!context) throw new Error('useSettingsContext must be used within a SettingsProvider');\n  return context;\n};\n\nexport { SettingsProvider, useSettingsContext };","map":{"version":3,"sources":["/Users/saidfatah/Documents/learning/NEXT/gqlcms-marketplace/context/settings.js"],"names":["React","currencies","useLocalStorage","SettingsContext","createContext","reducer","state","action","type","activeCurrency","payload","Error","SettingsProvider","children","savedSettings","saveSettings","find","currency","Boolean","default","dispatch","useReducer","hasMounted","setHasMounted","useState","switchCurrency","useEffect","useSettingsContext","context","useContext"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AAEA,MAAMC,eAAe,gBAAGH,KAAK,CAACI,aAAN,EAAxB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,6CAAYF,KAAZ;AAAmBG,QAAAA,cAAc,EAAEF,MAAM,CAACG;AAA1C;;AACF;AACE,YAAM,IAAIC,KAAJ,CAAW,0BAAyBJ,MAAM,CAACC,IAAK,EAAhD,CAAN;AAJJ;AAMD;;AAED,SAASI,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAwC;AACtC,QAAM,CAACC,aAAD,EAAgBC,YAAhB,IAAgCb,eAAe,CACnD,6BADmD,EAEnD;AACEO,IAAAA,cAAc,EAAER,UAAU,CAACe,IAAX,CAAiBC,QAAD,IAAcC,OAAO,CAACD,QAAQ,CAACE,OAAV,CAArC;AADlB,GAFmD,CAArD;AAMA,QAAM,CAACb,KAAD,EAAQc,QAAR,IAAoBpB,KAAK,CAACqB,UAAN,CAAiBhB,OAAjB,EAA0BS,aAA1B,CAA1B;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BvB,KAAK,CAACwB,QAAN,CAAe,KAAf,CAApC;;AAEA,QAAMC,cAAc,GAAIR,QAAD,IACrBG,QAAQ,CAAC;AAAEZ,IAAAA,IAAI,EAAE,iBAAR;AAA2BE,IAAAA,OAAO,EAAEO;AAApC,GAAD,CADV;;AAGAjB,EAAAA,KAAK,CAAC0B,SAAN,CAAgB,MAAM;AACpBX,IAAAA,YAAY,CAACT,KAAD,CAAZ;AACD,GAFD,EAEG,CAACA,KAAD,EAAQS,YAAR,CAFH;AAIAf,EAAAA,KAAK,CAAC0B,SAAN,CAAgB,MAAM;AACpBH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD,EAEG,EAFH;AAIA,MAAI,CAACD,UAAL,EAAiB,OAAO,IAAP;AAEjB,sBACE,QAAC,eAAD,CAAiB,QAAjB;AACE,IAAA,KAAK,kCACAhB,KADA;AAEHmB,MAAAA;AAFG,MADP;AAAA,cAMGZ;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;AAED,MAAMc,kBAAkB,GAAG,MAAM;AAC/B,QAAMC,OAAO,GAAG5B,KAAK,CAAC6B,UAAN,CAAiB1B,eAAjB,CAAhB;AAEA,MAAI,CAACyB,OAAL,EACE,MAAM,IAAIjB,KAAJ,CAAU,2DAAV,CAAN;AAEF,SAAOiB,OAAP;AACD,CAPD;;AASA,SAAShB,gBAAT,EAA2Be,kBAA3B","sourcesContent":["import * as React from 'react'\n\nimport { currencies } from 'graphcms.config'\nimport useLocalStorage from '@/hooks/use-local-storage'\n\nconst SettingsContext = React.createContext()\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SWITCH_CURRENCY':\n      return { ...state, activeCurrency: action.payload }\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`)\n  }\n}\n\nfunction SettingsProvider({ children }) {\n  const [savedSettings, saveSettings] = useLocalStorage(\n    'graphcms-commerce-reference',\n    {\n      activeCurrency: currencies.find((currency) => Boolean(currency.default))\n    }\n  )\n  const [state, dispatch] = React.useReducer(reducer, savedSettings)\n  const [hasMounted, setHasMounted] = React.useState(false)\n\n  const switchCurrency = (currency) =>\n    dispatch({ type: 'SWITCH_CURRENCY', payload: currency })\n\n  React.useEffect(() => {\n    saveSettings(state)\n  }, [state, saveSettings])\n\n  React.useEffect(() => {\n    setHasMounted(true)\n  }, [])\n\n  if (!hasMounted) return null\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        ...state,\n        switchCurrency\n      }}\n    >\n      {children}\n    </SettingsContext.Provider>\n  )\n}\n\nconst useSettingsContext = () => {\n  const context = React.useContext(SettingsContext)\n\n  if (!context)\n    throw new Error('useSettingsContext must be used within a SettingsProvider')\n\n  return context\n}\n\nexport { SettingsProvider, useSettingsContext }\n"]},"metadata":{},"sourceType":"module"}